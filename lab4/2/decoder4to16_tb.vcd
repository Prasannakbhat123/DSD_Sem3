$date
	Sat Aug 31 09:55:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decoder4to16_tb $end
$var wire 16 ! o [15:0] $end
$var reg 1 " EN $end
$var reg 4 # w [3:0] $end
$scope module d4to16 $end
$var wire 1 " EN $end
$var wire 4 $ w [3:0] $end
$var wire 16 % o [15:0] $end
$var wire 4 & en [3:0] $end
$scope module d1 $end
$var wire 1 " EN $end
$var wire 2 ' w [1:0] $end
$var reg 4 ( o [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 ) EN $end
$var wire 2 * w [1:0] $end
$var reg 4 + o [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 1 , EN $end
$var wire 2 - w [1:0] $end
$var reg 4 . o [3:0] $end
$upscope $end
$scope module d4 $end
$var wire 1 / EN $end
$var wire 2 0 w [1:0] $end
$var reg 4 1 o [3:0] $end
$upscope $end
$scope module d5 $end
$var wire 1 2 EN $end
$var wire 2 3 w [1:0] $end
$var reg 4 4 o [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 4
b0 3
02
b1 1
b0 0
0/
b1 .
b0 -
0,
b0 +
b0 *
1)
b1 (
b0 '
b1 &
b1000100010000 %
b0 $
b0 #
0"
b1000100010000 !
$end
#20
b100 +
b100 .
b100 1
b100010001000100 !
b100010001000100 %
b100 4
0)
b10 *
b10 -
b10 0
b10 3
b0 &
b0 (
b10 #
b10 $
1"
#40
b1000 +
b1000 .
b1000 1
b1000100010001000 !
b1000100010001000 %
b1000 4
b1 '
b11 *
b11 -
b11 0
b11 3
b111 #
b111 $
#60
b1 +
b1 .
b1 1
b1000100010001 !
b1000100010001 %
b1 4
b11 '
b0 *
b0 -
b0 0
b0 3
b1100 #
b1100 $
#80
b10 +
b10 .
b10 1
b10001000100010 !
b10001000100010 %
b10 4
b1 '
b1 *
b1 -
b1 0
b1 3
b101 #
b101 $
#100
b1000 +
b1000 .
b1000 1
b1000100010001000 !
b1000100010001000 %
b1000 4
b11 '
b11 *
b11 -
b11 0
b11 3
b1111 #
b1111 $
#120
b10 +
b10 .
b10 1
b10001000100010 !
b10001000100010 %
b10 4
b0 '
b1 *
b1 -
b1 0
b1 3
b1 #
b1 $
#140
b100 +
b100 .
b100 1
b100010001000100 !
b100010001000100 %
b100 4
b11 '
b10 *
b10 -
b10 0
b10 3
b1110 #
b1110 $
#160
